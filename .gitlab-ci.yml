stages:
  - build-artifacts
  - build-containers
  - deploy
  
image: maven:3.6-jdk-8-slim

variables:
  GIT_SUBMODULE_STRATEGY: normal
  DOCKER_IMAGE: comerzzia/api/v2/loyalty:$CI_COMMIT_REF_NAME
  MAVEN_OPTS: "-Djava.awt.headless=true -Dmaven.repo.local=.m2/repository -DbuildTimestamp=${CI_COMMIT_TIMESTAMP} -DbuildNumber=${CI_PIPELINE_ID} -DbuildCommit=${CI_COMMIT_SHA} -DbuildUser=${GITLAB_USER_LOGIN}"   
  MAVEN_CLI_OPTS: >-
    -s .m2/settings.xml 
    --batch-mode 
    --errors 
    --fail-at-end 
    --show-version
    -DaltReleaseDeploymentRepository=artifactory::default::https://artifactory.tier1.es/artifactory/clientes.local
    -DaltSnapshotDeploymentRepository=artifactory::default::https://artifactory.tier1.es/artifactory/clientes.local

  K8S_WORKLOAD: v2-loyalty
  K8S_NAMESPACE: unide

  
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
  - .m2/repository
  
build_maven:
  stage: build-artifacts
  only:
  - branches
  - tags
  script:
  - mvn $MAVEN_CLI_OPTS package -DskipTests
  artifacts:
    paths:
    - target/*.war
    expire_in: 1 hour 
    
docker_build:
  stage: build-containers
  dependencies:
  - build_maven
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  before_script:
  ### create kaniko credentials file
  - cp "$KANIKO_SECRET" /kaniko/.docker/config.json
  script: >
    if [[ ! -z "$CI_COMMIT_TAG" ]]; then
      echo Building image "${PUBLIC_REGISTRY_SERVER}/${CLIENT}/${DOCKER_IMAGE}"
      /kaniko/executor  --context "${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/src/main/docker/Dockerfile" --destination "${PUBLIC_REGISTRY_SERVER}/${CLIENT}/${DOCKER_IMAGE}" --destination "${DEVELOP_REGISTRY_SERVER}/${CLIENT}/${DOCKER_IMAGE}"
    else
      echo Building image "${DEVELOP_REGISTRY_SERVER}/${CLIENT}/${DOCKER_IMAGE}"
      /kaniko/executor --context "${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/src/main/docker/Dockerfile" --destination "${DEVELOP_REGISTRY_SERVER}/${CLIENT}/${DOCKER_IMAGE}"
    fi
  rules:
    - if: ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($CI_COMMIT_TAG != null)

 
### Automatic deploy to Kubernetes using Rancher
#deploy_containers:
#  stage: deploy
#  variables:
#    DOCKER_AUTH_CONFIG: "{\"auths\":{\"$TR1_REGISTRY_SERVER\":{\"auth\":\"$TR1_REGISTRY_TOKEN\"}}}"
#  only:
#  - develop
#  dependencies:
#  - docker_build
#  image: $TR1_REGISTRY_SERVER/contrib/rancher-cli-k8s
#  script:
#    - rancher login $RANCHER_SERVER --token $RANCHER_TOKEN --context $RANCHER_PROJECT
#    - rancher kubectl patch deployment $K8S_WORKLOAD -n $K8S_NAMESPACE -p '{"spec":{"template":{"metadata":{"labels":{"date":"'`date +'%s'`'", "vcs-commit":"'$CI_COMMIT_SHA'" }}}}}'

